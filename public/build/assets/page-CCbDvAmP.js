import{O as c}from"./main-wl1HvSEI.js";import{d as p,a as i,p as d,g as a}from"./api-D6uEPlNO.js";const w=c("page",{state:()=>({pages:[],loading:!1,error:null}),actions:{async getPages(){this.loading=!0;try{const o=await a("/api/pages"),e=o.headers.get("content-type"),r=await o.text();if(o.ok&&e&&e.includes("application/json")){const t=JSON.parse(r);return this.pages=t.data||[],t.data}else{if(o.ok)throw console.error("API returned non-JSON response when JSON was expected:",r.substring(0,200)+"..."),new Error("Server returned unexpected response format");try{const t=JSON.parse(r);throw new Error(t.message||"Failed to fetch pages")}catch{throw console.error("API returned non-JSON error response:",r.substring(0,200)+"..."),new Error(`Server error: ${o.status} - ${o.statusText}`)}}}catch(o){throw this.error=o.message,o}finally{this.loading=!1}},async getPage(o){this.loading=!0;try{const e=await a(`/api/pages/${o}`),r=e.headers.get("content-type"),t=await e.text();if(e.ok&&r&&r.includes("application/json"))return JSON.parse(t).data;if(e.ok)throw console.error("API returned non-JSON response when JSON was expected:",t.substring(0,200)+"..."),new Error("Server returned unexpected response format");try{const s=JSON.parse(t);throw new Error(s.message||"Failed to fetch page")}catch{throw console.error("API returned non-JSON error response:",t.substring(0,200)+"..."),new Error(`Server error: ${e.status} - ${e.statusText}`)}}catch(e){throw this.error=e.message,e}finally{this.loading=!1}},async createPage(o){try{const e=await d("/api/pages",o),r=e.headers.get("content-type"),t=await e.text();if(e.ok&&r&&r.includes("application/json")){const s=JSON.parse(t);return await this.getPages(),s}else{if(e.ok)throw console.error("API returned non-JSON response when JSON was expected:",t.substring(0,200)+"..."),new Error("Server returned unexpected response format");try{const s=JSON.parse(t);throw new Error(s.message||"Failed to create page")}catch{throw console.error("API returned non-JSON error response:",t.substring(0,200)+"..."),new Error(`Server error: ${e.status} - ${e.statusText}`)}}}catch(e){throw this.error=e.message,e}},async updatePage(o,e){try{const r=await i(`/api/pages/${o}`,e),t=r.headers.get("content-type"),s=await r.text();if(r.ok&&t&&t.includes("application/json")){const n=JSON.parse(s);return await this.getPages(),n}else{if(r.ok)throw console.error("API returned non-JSON response when JSON was expected:",s.substring(0,200)+"..."),new Error("Server returned unexpected response format");try{const n=JSON.parse(s);throw new Error(n.message||"Failed to update page")}catch{throw console.error("API returned non-JSON error response:",s.substring(0,200)+"..."),new Error(`Server error: ${r.status} - ${r.statusText}`)}}}catch(r){throw this.error=r.message,r}},async deletePage(o){try{const e=await p(`/api/pages/${o}`),r=e.headers.get("content-type"),t=await e.text();if(e.ok&&r&&r.includes("application/json")){const s=JSON.parse(t);return await this.getPages(),s}else{if(e.ok)throw console.error("API returned non-JSON response when JSON was expected:",t.substring(0,200)+"..."),new Error("Server returned unexpected response format");try{const s=JSON.parse(t);throw new Error(s.message||"Failed to delete page")}catch{throw console.error("API returned non-JSON error response:",t.substring(0,200)+"..."),new Error(`Server error: ${e.status} - ${e.statusText}`)}}}catch(e){throw this.error=e.message,e}}}});export{w as u};
